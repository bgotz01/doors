// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enums
enum ComponentType {
  PANEL
  FRAME
  TRANSOM
  SIDE_LITE
  GLASS_LITE
  HARDWARE
  FINISH
  ADDITIONAL
  SYSTEM
}

// Core Models
model Supplier {
  id       String  @id @default(cuid())
  name     String // e.g., "Cobra Doors Toronto"
  location String? // e.g., "Toronto, ON"
  website  String?
  email    String?
  phone    String?
  isActive Boolean @default(true)

  panels      SupplierPanel[]
  options     SupplierOption[]
  doorSystems DoorSystem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("suppliers")
}

model PanelModel {
  id          String   @id @default(cuid())
  code        String   @unique // e.g., "WG8-F"
  name        String // e.g., "Contemporary Flush Oak Panel"
  material    String // e.g., "Fiberglass"
  collection  String // e.g., "Oak"
  height      String // e.g., "6'8"
  widths      String[] // e.g., ["32","34","36"]
  description String?
  imageUrl    String?

  supplierPanels  SupplierPanel[]
  compatibleGlass GlassDesign[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("panel_models")
}

model SupplierPanel {
  id         String   @id @default(cuid())
  supplier   Supplier @relation(fields: [supplierId], references: [id])
  supplierId String

  panelModel   PanelModel @relation(fields: [panelModelId], references: [id])
  panelModelId String

  basePrice     Float?
  pricePerWidth Json?
  leadTime      String?
  isActive      Boolean @default(true)

  // ðŸ‘‡ Add this inverse relation
  doorSystems DoorSystem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([supplierId, panelModelId])
  @@map("supplier_panels")
}

model GlassDesign {
  id             String   @id @default(cuid())
  name           String // e.g., "Evangeline"
  type           String // e.g., "Stained"
  privacyRating  Int // e.g., 7
  camingOptions  String[] // e.g., ["Zinc", "Patina"]
  styleFeatures  String? // e.g., "Beveled Clear Glass with V-Grooves"
  compatibleWith String? // e.g., "Compatible with Oak & Smooth collections"
  imageUrl       String?

  compatiblePanels PanelModel[]

  doorSystems DoorSystem[] // One-to-many (if each door uses one glass design)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("glass_designs")
}

model CustomOption {
  id          String        @id @default(cuid())
  name        String // e.g., "Composite Jamb Painted Two Tone"
  category    ComponentType // e.g., FINISH
  pricingType String // e.g., "flat", "per_unit"
  imageUrl    String?
  description String?
  isActive    Boolean       @default(true)

  supplierOptions SupplierOption[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("custom_options")
}

model SupplierOption {
  id         String   @id @default(cuid())
  supplier   Supplier @relation(fields: [supplierId], references: [id])
  supplierId String

  option   CustomOption @relation(fields: [optionId], references: [id])
  optionId String

  unitPrice Float // e.g., 660.00
  leadTime  String? // e.g., "1 week"
  isActive  Boolean @default(true)

  doorSystems DoorSystem[] // Many-to-many

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([supplierId, optionId])
  @@map("supplier_options")
}

model DoorSystem {
  id         String   @id @default(cuid())
  supplier   Supplier @relation(fields: [supplierId], references: [id])
  supplierId String

  name    String // e.g., "Oak WG01 with Evangeline Glass"
  panel   SupplierPanel    @relation(fields: [panelId], references: [id])
  panelId String
  options SupplierOption[]
  glass   GlassDesign?     @relation(fields: [glassId], references: [id])
  glassId String?

  width    String // e.g., "42"
  height   String // e.g., "8'0"
  price    Float // e.g., 13422.04 (aggregated)
  imageUrl String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("door_systems")
}
